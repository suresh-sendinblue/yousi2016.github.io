1.先建立文件夹D:\dev\nvm(nvm是自动创建的)和D:\dev\nodejs

2.先安装nodejs
    下载地址：http://nodejs.org/zh-cn/

3.nvm安装步骤：
    下载地址：https://github.com/coreybutler/nvm-windows/releases
    cmd  set | findstr "nvm"
    cmd 运行 nvm -h

4.nvm配置淘宝镜像（下载更快）
    修改D:\dev\nvm\setting.txt
    root: D:\dev\nvm
    path: D:\dev\nodejs
    node_mirror:http://npm.taobao.org/mirrors/node/
    npm_mirror:https://npm.taobao.org/mirrors/npm/
   
5.通过nvm安装某版本的nodejs集（node npm（nodejs包管理工具））
    64位系统：cmd运行nvm install 6.9.2
    32位系统：cmd运行nvm install 6.9.232
  注意：其中6.9.2表示安装的node版本为6.9.2，这里npm是包含在node中的不需要单独安装

6、安装node两个版本6.9.2和4.6.0
    
7.先打印出node版本列表：node list
  切换node版本：nvm use 6.9.2
  node 会处处运行，不管哪个文件夹都会控制到
8.npm 设置淘宝镜像（下载更快）
  cmd:npm config set registry https://registry.npm.taobao.org
  
 教程： http://www.cnblogs.com/PeunZhang/p/5553574.html
 
9.在不同的环境中使用ES6
    1.在nodejs环境中运行ES6
        c:\Users\wangze>node
        >let school='1111';
        undefined
        >console.log(school);
        1111
        undefined
    2.在chrome56（64bit）浏览器中运行ES6
        let a='222';
        undefined
        console.log(a);
        222
        undefined
    3.IE9和IE11都不支持ES6的语法
        ES6语法支持度：IE9为0%；IE11为11%；chrome56为97%。
 
 10.ES6到ES5的转换
        1.使用Babel完成ES6到ES5的转换
        2.使用npm创建一个nodejs工程步骤：
            1.mkdir命令用来创建目录:mkdir rnlesson1
            2.进到刚创建的文件夹的下面：cd rnlesson1
            3.在项目中引导创建一个package.json文件:npm init 
                然后一路按回车键就行
            4.通过webstorm打开rnlesson1这个项目File->Open
            5.使用webstorm编写ES6代码
            6.webstorm配置支持ES6语法规则
                ctrl+alt+s ->settings->Languages & frameworks->JavaScript->ES6
            7.babel全局安装：npm install -g babel-cli
            8.安装转换插件：（此插件定义了ES2015转码规则，相当于是字典的功能）
                npm install babel-preset-es2015 --save或者npm install --save babel-preset-es2015
                
                

            9.cmd 命令行转换ES6到ES5并且创建一个es5.js文件
                
               babel es6.js --out-file es5.js--presets es2015
               
               只在命令里面打印出编译后的es5的代码
               babel es6.j --presets es2015
           
           10.自动转换：babel es6.js -w --out-file es5.js --presets es2015
           
           11.添加并编写index.html文件，放到ST3服务器下面运行
           
           12.使用Browsersync 实时刷新页面和Babel-Core实时转换ES6
                Browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）
                并自动刷新页面。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。
                您可以想象一下：“假设您的桌子上有pc、ipad、iphone、android等设备，同时打开了您需要调试的页面，当您使用browsersync后，
                您的任何一次代码保存，以上的设备都会同时显示您的改动”。无论您是前端还是后端工程师，使用它将提高您30%的工作效率。
           
           13，安装Browsersync
                npm install -g browser-sync
           
           14  安装babel-core(在网页上实时转换ES6到ES5)
                npm install babel-core@5 --save
           
           15.index.html页面引入babel-core实时转换js代码
               <script type="text/javascript" src='/node_modules/babel-core/browser.min.js'></script>
               <script type="text/javascript" src='/node_modules/babel-core/browser-polyfill.min.js'></script>
	           <script type="text/babel" src="es6.js"></script>   
           
           16.在当前项目目录下启动Browsersync，开始监听
                browser-sync start --server --files '**'
	   	
		Serving files from:
		Watchimg files...
		
	   	显示：Reloading Browsers...
	    17.修改es6.js
	    	let a=11;
		let results = [1, 2, 3].map(x => x*x );
		console.log(a);
		console.log(results);
	 	页面自动刷新出结果
		1这里的es6到es5的转换时在浏览器端实现的，可同时刷新chrome和ie11，现在es6可以在各种浏览器上使用了。
		
	    18.回到命令行的方式再来看看：
	    	CMD运行：babel es6.js --out-file es5.js --presets es2015
		
	    19.三种es6到es5的转换方式：
	    	1.babel命令行方式：babel es6.js --out-file es5.js --presets es2015
		2.浏览器引入babel-core的方式
			<script type="text/javascript" src='/node_modules/babel-core/browser.min.js'></script>
   			<script type="text/javascript" src='/node_modules/babel-core/browser-polyfill.min.js'></script>
			<script type="text/babel" src="es6.js"></script>
		3.webstorm自带的file watcher的功能
		

        
    

    
